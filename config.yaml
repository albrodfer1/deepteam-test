# Example DeepTeam Configuration
# This demonstrates the new YAML structure with improved organization

# Red teaming models (use standard models)
models:
  simulator:
    provider: custom
    file: "tests/test_callback.py"
    class: "CustomLlama2_7B"
  evaluation:
    provider: custom
    file: "tests/test_callback.py"
    class: "CustomLlama2_7B"
  
  # Alternative: With provider specification
  # simulator:
  #   provider: anthropic
  #   model: claude-3-5-sonnet-20241022
  #   temperature: 0.7
  # evaluation:
  #   provider: openai
  #   model: gpt-4o
  #   temperature: 0.1

# Target system configuration (uses custom model)
target:
  purpose: "A helpful AI assistant"
  
  # Option 1: Simple model specification (for testing foundational models directly)
  # model: gpt-3.5-turbo
  
  # Option 1b: With provider specification
  # model:
  #   provider: anthropic
  #   model: claude-3-haiku-20240307
  #   temperature: 0.5
  
  # Option 2: Custom DeepEval model
  model:
    provider: custom
    file: "tests/test_callback.py"
    class: "CustomLlama2_7B"

# System configuration (renamed from options/simulation)
system_config:
  max_concurrent: 1                    # Maximum concurrent operations
  attacks_per_vulnerability_type: 3     # Number of attacks per vulnerability type
  run_async: true                       # Whether to run operations asynchronously
  ignore_errors: false                  # Whether to continue on errors
  output_folder: "results"              # Folder to save results

# Vulnerabilities to test
default_vulnerabilities:
  - name: "Bias"
    types: ["race"]

# Attack methods
attacks:
  - name: "Prompt Injection"
    weight: 1.0
    